name: Java CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  GHIDRA_VERSION: 10.0.4
  GHIDRA_DATE: 20210928

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Ghidra
        run: |
          curl -L -O "https://github.com/NationalSecurityAgency/ghidra/releases/download/Ghidra_${GHIDRA_VERSION}_build/ghidra_${GHIDRA_VERSION}_PUBLIC_${GHIDRA_DATE}.zip"
          unzip -q "ghidra_${GHIDRA_VERSION}_PUBLIC_${GHIDRA_DATE}.zip"
          echo "GHIDRA_INSTALL_DIR=$PWD/ghidra_${GHIDRA_VERSION}_PUBLIC" >> $GITHUB_ENV
        working-directory: ${{ env.TMPDIR }}

      - name: Build with Gradle
        run: ./gradlew

      - name: Upload to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: libefidecompress.dylib
          path: os/osx64/libefidecompress.dylib

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Ghidra
        run: |
          Invoke-WebRequest "https://github.com/NationalSecurityAgency/ghidra/releases/download/Ghidra_${env:GHIDRA_VERSION}_build/ghidra_${env:GHIDRA_VERSION}_PUBLIC_${env:GHIDRA_DATE}.zip" -OutFile "ghidra_${env:GHIDRA_VERSION}_PUBLIC_${env:GHIDRA_DATE}.zip"
          Expand-Archive "ghidra_${env:GHIDRA_VERSION}_PUBLIC_${env:GHIDRA_DATE}.zip" -DestinationPath .
          echo "GHIDRA_INSTALL_DIR=$pwd\ghidra_${env:GHIDRA_VERSION}_PUBLIC" >> ${env:GITHUB_ENV}
        working-directory: ${{ env.TEMP }}

      - name: Build with Gradle
        run: ./gradlew.bat

      - name: Upload to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: efidecompress.dll
          path: os/win64/efidecompress.dll

  build-linux:
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Ghidra
        run: |
          curl -L -O "https://github.com/NationalSecurityAgency/ghidra/releases/download/Ghidra_${GHIDRA_VERSION}_build/ghidra_${GHIDRA_VERSION}_PUBLIC_${GHIDRA_DATE}.zip"
          unzip -q "ghidra_${GHIDRA_VERSION}_PUBLIC_${GHIDRA_DATE}.zip"
          echo "GHIDRA_INSTALL_DIR=$PWD/ghidra_${GHIDRA_VERSION}_PUBLIC" >> $GITHUB_ENV
        working-directory: ${{ env.TMPDIR }}

      - name: Download macOS JNI library
        uses: actions/download-artifact@v2
        with:
          name: libefidecompress.dylib
          path: os/osx64

      - name: Download Windows JNI library
        uses: actions/download-artifact@v2
        with:
          name: efidecompress.dll
          path: os/win64

      - name: Build plugin with Gradle
        run: |
          ./gradlew
          plugin_date=$(find dist -name '*.zip' | awk -F '_' '{print $4}')
          last_tag=$(git tag -l "$plugin_date.*" | tail -n 1)
          if [ ! -z "$last_tag" ]; then
              echo "$last_tag" | awk -F '.' '{print "PLUGIN_TAG=" $1 "." $2+1}' >> $GITHUB_ENV
          else
              echo "PLUGIN_TAG=$plugin_date.0" >> $GITHUB_ENV
          fi

      - name: Upload to Releases
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*.zip
          tag: ${{ env.PLUGIN_TAG }}
          file_glob: true
